@using MvcPaging
@model IPagedList<CastleWindsorTestApp.Models.Employee>

@*@model IEnumerable<CastleWindsorTestApp.Models.Employee>*@
    @{
        ViewBag.Title = "Home Page";
    }

    <div class="form-group">
        <div class="col-sm-2">

            <a class="btn btn-success btn-sm form-control" data-modal="" href="@Url.Action("Create", "Employee")">
                <i class="fa fa-plus"></i>
                Create
            </a>
        </div>
    </div>

    <table class="table table-striped table-bordered">
        <thead>
            <tr class="row">
                <th class="col-sm">
                    @Html.DisplayName("Name")
                </th>
                <th class="col-sm">
                    @Html.DisplayName("Job")
                </th>
                <th class="col-sm">
                    @Html.DisplayName("Salary")
                </th>
                <th class="col-sm">
                    @Html.DisplayName("Department")
                </th>
                <th class="col-sm">
                    @Html.DisplayName("Actions")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr class="row">
                    <td class="col-sm">
                        @Html.DisplayFor(model => employee.EmployeeName, new { @class = "form-control" })
                    </td>
                    <td class=" col-sm">
                        @Html.DisplayFor(model => employee.JobName, new { @class = "form-control" })
                    </td>
                    <td class=" col-sm">
                        @Html.DisplayFor(model => employee.Salary, new { @class = "form-control" })
                    </td>
                    <td class=" col-sm">
                        @Html.DisplayFor(model => employee.Department.DepartmentName, new { @class = "form-control" })
                    </td>
                    <td class=" col-sm">
                        <a class="btn btn-primary btn-sm" data-modal="" href="@Url.Action("Update", "Employee", new { id = employee.EmployeeId })">
                            <i class="fa fa-pencil"></i>
                            Edit
                        </a>

                        <a class="btn btn-danger btn-sm" data-modal="" href="@Url.Action("Delete", "Employee", new { id = employee.EmployeeId })">
                            <i class="fa fa-trash"></i>
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav id="nav_pager" aria-label="Page navigation example">
        @Html.Raw(Html.Pager(
             new Options
             {
                 PageSize = Model.PageSize,
                 TotalItemCount = Model.TotalItemCount,
                 CurrentPage = Model.PageNumber,
                 ItemTexts = new ItemTexts() { Next = "", Previous = "" },
                 ItemIcon = new ItemIcon() { First = "fa fa-backward", Previous = "fa fa-chevron-left", Next = "fa fa-chevron-right", Last = "fa fa-forward" },
                 TooltipTitles = new TooltipTitles() { Next = "Next page {0}", Previous = "Previous page {0}", Page = "Go to page {0}" },
                 Size = Size.large,
                 Alignment = Alignment.centered,
                 IsShowControls = true,
                 IsShowFirstLast = true,
                 IsShowPages = true
             }, new { employee_name = ViewData["emp_name"] }))
    </nav>
    <div id="myModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id="myModalContent"></div>
            </div>
        </div>
    </div>

    @section scripts {
        <script type="text/javascript">

            jQuery("a[data-modal]").on('click', function () {

                jQuery("#myModalContent").load(this.href, function () {

                    jQuery('#myModal').modal("show");
                });

                return false;
            });

        </script>
    }
